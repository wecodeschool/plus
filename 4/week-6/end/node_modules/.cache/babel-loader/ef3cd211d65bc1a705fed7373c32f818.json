{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Dropbox/Sites/plus/4/week-6/end/src/CityWeather.js\";\nimport React, { Component } from \"react\";\nimport \"./CityWeather.css\";\nimport axios from \"axios\";\nimport Loader from \"react-loader-spinner\";\nexport default class CityWeather extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loaded: false,\n      unit: \"metrics\"\n    };\n\n    this.convertTemp = event => {\n      event.preventDefault();\n\n      if (this.state.units === \"metrics\") {\n        this.setState({\n          temp: Math.round(this.state.metricTemp * 9 / 5 + 32),\n          units: \"imperial\"\n        });\n      } else {\n        this.setState({\n          temp: Math.round(this.state.metricTemp),\n          units: \"metrics\"\n        });\n      }\n    };\n\n    this.updateTemperature = response => {\n      this.setState({\n        loaded: true,\n        metricTemp: response.data.main.temp,\n        temp: Math.round(response.data.main.temp),\n        units: \"metrics\"\n      });\n    };\n\n    this.nav = () => {\n      if (this.state.units === \"metrics\") {\n        return React.createElement(\"small\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, \"\\xB0C |\", \" \", React.createElement(\"span\", {\n          className: \"fahrenheit\",\n          onClick: event => this.convertTemp(event),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"\\xB0F\"));\n      } else {\n        return React.createElement(\"small\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"fahrenheit\",\n          onClick: event => this.convertTemp(event),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"\\xB0C\"), \" \", \"| \\xB0F\");\n      }\n    };\n\n    this.temperature = () => {\n      if (this.state.loaded) {\n        return React.createElement(\"p\", {\n          className: \"card-text city-temperature\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, this.state.temp, this.nav());\n      } else {\n        let city = this.props.name;\n        let apiKey = \"5f472b7acba333cd8a035ea85a0d4d4c\";\n        let apiUrl = \"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(apiKey, \"&units=metric\");\n        axios.get(apiUrl).then(this.updateTemperature);\n        return React.createElement(Loader, {\n          type: \"Puff\",\n          color: \"#00BFFF\",\n          height: \"100\",\n          width: \"100\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        });\n      }\n    };\n  }\n\n  label() {\n    if (this.state.temp < 0) return React.createElement(\"div\", {\n      className: \"badge badge-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \" FREEZING \");\n    if (this.state.temp > 25) return React.createElement(\"div\", {\n      className: \"badge badge-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \" HOT \");\n    if (this.state.temp < 10) return React.createElement(\"div\", {\n      className: \"badge badge-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \" COLD \");\n    return React.createElement(\"div\", {\n      className: \"badge badge-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \" WARM \");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body bg-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.label(), React.createElement(\"h5\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \" \", this.props.name, \" \")), this.temperature(), React.createElement(\"a\", {\n      href: \"https://www.google.com/search?q=weather+\".concat(this.props.name),\n      target: \"_blank\",\n      className: \"btn btn-primary btn-sm shadow-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"View forecast\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/matt/Dropbox/Sites/plus/4/week-6/end/src/CityWeather.js"],"names":["React","Component","axios","Loader","CityWeather","state","loaded","unit","convertTemp","event","preventDefault","units","setState","temp","Math","round","metricTemp","updateTemperature","response","data","main","nav","temperature","city","props","name","apiKey","apiUrl","get","then","label","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./CityWeather.css\";\nimport axios from \"axios\";\nimport Loader from \"react-loader-spinner\";\n\nexport default class CityWeather extends Component {\n  state = {\n    loaded: false,\n    unit: \"metrics\"\n  };\n  label() {\n    if (this.state.temp < 0)\n      return <div className=\"badge badge-primary\"> FREEZING </div>;\n    if (this.state.temp > 25)\n      return <div className=\"badge badge-danger\"> HOT </div>;\n    if (this.state.temp < 10)\n      return <div className=\"badge badge-info\"> COLD </div>;\n    return <div className=\"badge badge-warning\"> WARM </div>;\n  }\n\n  convertTemp = event => {\n    event.preventDefault();\n    if (this.state.units === \"metrics\") {\n      this.setState({\n        temp: Math.round((this.state.metricTemp * 9) / 5 + 32),\n        units: \"imperial\"\n      });\n    } else {\n      this.setState({\n        temp: Math.round(this.state.metricTemp),\n        units: \"metrics\"\n      });\n    }\n  };\n\n  updateTemperature = response => {\n    this.setState({\n      loaded: true,\n      metricTemp: response.data.main.temp,\n      temp: Math.round(response.data.main.temp),\n      units: \"metrics\"\n    });\n  };\n\n  nav = () => {\n    if (this.state.units === \"metrics\") {\n      return (\n        <small>\n          Â°C |{\" \"}\n          <span\n            className=\"fahrenheit\"\n            onClick={event => this.convertTemp(event)}\n          >\n            Â°F\n          </span>\n        </small>\n      );\n    } else {\n      return (\n        <small>\n          <span\n            className=\"fahrenheit\"\n            onClick={event => this.convertTemp(event)}\n          >\n            Â°C\n          </span>{\" \"}\n          | Â°F\n        </small>\n      );\n    }\n  };\n\n  temperature = () => {\n    if (this.state.loaded) {\n      return (\n        <p className=\"card-text city-temperature\">\n          {this.state.temp}\n          {this.nav()}\n        </p>\n      );\n    } else {\n      let city = this.props.name;\n      let apiKey = \"5f472b7acba333cd8a035ea85a0d4d4c\";\n      let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n      axios.get(apiUrl).then(this.updateTemperature);\n      return <Loader type=\"Puff\" color=\"#00BFFF\" height=\"100\" width=\"100\" />;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"card\">\n        <div className=\"card-body bg-light\">\n          {this.label()}\n          <h5 className=\"card-title\">\n            <strong> {this.props.name} </strong>\n          </h5>\n          {this.temperature()}\n          <a\n            href={`https://www.google.com/search?q=weather+${this.props.name}`}\n            target=\"_blank\"\n            className=\"btn btn-primary btn-sm shadow-sm\"\n          >\n            View forecast\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}