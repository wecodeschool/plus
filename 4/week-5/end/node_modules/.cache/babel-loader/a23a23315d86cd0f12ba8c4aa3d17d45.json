{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Dropbox/Sites/plus/4/week-6/end/src/CityWeather.js\";\nimport React, { Component } from \"react\";\nimport \"./CityWeather.css\";\nimport axios from \"axios\";\nimport { thisExpression } from \"@babel/types\";\nexport default class CityWeather extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loaded: false,\n      unit: \"metrics\"\n    };\n\n    this.convertTemp = () => {\n      alert(\"Converting temp\");\n    };\n\n    this.temperature = () => {\n      if (this.state.loaded) {\n        return React.createElement(\"p\", {\n          className: \"card-text city-temperature\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, this.state.temp, React.createElement(\"small\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, \"\\xB0C |\", \" \", React.createElement(\"span\", {\n          className: \"fahrenheit\",\n          onClick: this.convertTemp,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"\\xB0F\")));\n      } else {\n        this.setState({\n          loaded: true,\n          temp: 19,\n          units: \"metrics\"\n        });\n\n        function showTemperature(response) {\n          let temperature = document.querySelector(\"#temperature\");\n          temperature.innerText = Math.round(response.data.main.temp);\n          let place = document.querySelector(\"#place\");\n          place.innerText = response.data.name;\n          let description = document.querySelector(\"#description\");\n          description.innerText = response.data.weather[0].description;\n          let humidity = document.querySelector(\"#humidity\");\n          humidity.innerText = response.data.main.humidity;\n          let wind = document.querySelector(\"#wind\");\n          wind.innerText = Math.round(response.data.wind.speed);\n        }\n\n        let city = \"Lisbon\";\n        let apiKey = \"5f472b7acba333cd8a035ea85a0d4d4c\";\n        let apiUrl = \"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(apiKey, \"&units=metric\");\n        axios.get(apiUrl).then(showTemperature);\n      }\n    };\n  }\n\n  label() {\n    if (this.props.temp < 0) return React.createElement(\"div\", {\n      className: \"badge badge-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \" FREEZING \");\n    if (this.props.temp > 25) return React.createElement(\"div\", {\n      className: \"badge badge-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \" HOT \");\n    if (this.props.temp < 10) return React.createElement(\"div\", {\n      className: \"badge badge-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \" COLD \");\n    return React.createElement(\"div\", {\n      className: \"badge badge-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \" WARM \");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body bg-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.label(), React.createElement(\"h5\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \" \", this.props.name, \" \")), this.temperature(), React.createElement(\"a\", {\n      href: \"https://www.google.com/search?q=weather+\".concat(this.props.name),\n      target: \"_blank\",\n      className: \"btn btn-primary btn-sm shadow-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"View forecast\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/matt/Dropbox/Sites/plus/4/week-6/end/src/CityWeather.js"],"names":["React","Component","axios","thisExpression","CityWeather","state","loaded","unit","convertTemp","alert","temperature","temp","setState","units","showTemperature","response","document","querySelector","innerText","Math","round","data","main","place","name","description","weather","humidity","wind","speed","city","apiKey","apiUrl","get","then","label","props","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./CityWeather.css\";\nimport axios from \"axios\";\nimport { thisExpression } from \"@babel/types\";\n\nexport default class CityWeather extends Component {\n  state = {\n    loaded: false,\n    unit: \"metrics\"\n  };\n  label() {\n    if (this.props.temp < 0)\n      return <div className=\"badge badge-primary\"> FREEZING </div>;\n    if (this.props.temp > 25)\n      return <div className=\"badge badge-danger\"> HOT </div>;\n    if (this.props.temp < 10)\n      return <div className=\"badge badge-info\"> COLD </div>;\n    return <div className=\"badge badge-warning\"> WARM </div>;\n  }\n\n  convertTemp = () => {\n    alert(\"Converting temp\");\n  };\n\n  temperature = () => {\n    if (this.state.loaded) {\n      return (\n        <p className=\"card-text city-temperature\">\n          {this.state.temp}\n          <small>\n            °C |{\" \"}\n            <span className=\"fahrenheit\" onClick={this.convertTemp}>\n              °F\n            </span>\n          </small>\n        </p>\n      );\n    } else {\n      this.setState({\n        loaded: true,\n        temp: 19,\n        units: \"metrics\"\n      });\n      function showTemperature(response) {\n        let temperature = document.querySelector(\"#temperature\");\n        temperature.innerText = Math.round(response.data.main.temp);\n\n        let place = document.querySelector(\"#place\");\n        place.innerText = response.data.name;\n\n        let description = document.querySelector(\"#description\");\n        description.innerText = response.data.weather[0].description;\n\n        let humidity = document.querySelector(\"#humidity\");\n        humidity.innerText = response.data.main.humidity;\n\n        let wind = document.querySelector(\"#wind\");\n        wind.innerText = Math.round(response.data.wind.speed);\n      }\n\n      let city = \"Lisbon\";\n      let apiKey = \"5f472b7acba333cd8a035ea85a0d4d4c\";\n      let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n      axios.get(apiUrl).then(showTemperature);\n\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"card\">\n        <div className=\"card-body bg-light\">\n          {this.label()}\n          <h5 className=\"card-title\">\n            <strong> {this.props.name} </strong>\n          </h5>\n          {this.temperature()}\n          <a\n            href={`https://www.google.com/search?q=weather+${this.props.name}`}\n            target=\"_blank\"\n            className=\"btn btn-primary btn-sm shadow-sm\"\n          >\n            View forecast\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}