{"ast":null,"code":"var _jsxFileName = \"/Users/matt/Dropbox/Sites/plus/4/week-6/start/src/CityWeather.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Loader from \"react-loader-spinner\";\nimport \"./CityWeather.css\";\nexport default class CityWeather extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: {\n        loaded: false\n      }\n    };\n\n    this.label = () => {\n      if (this.state.temperature.value < 0) return React.createElement(\"div\", {\n        className: \"badge badge-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \" FREEZING \");\n      if (this.state.temperature.value > 25) return React.createElement(\"div\", {\n        className: \"badge badge-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \" HOT \");\n      if (this.state.temperature.value < 10) return React.createElement(\"div\", {\n        className: \"badge badge-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \" COLD \");\n      return React.createElement(\"div\", {\n        className: \"badge badge-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \" WARM \");\n    };\n\n    this.showTemperature = response => {\n      this.setState({\n        temperature: {\n          value: Math.round(response.data.main.temp),\n          unit: \"metrics\",\n          loaded: true\n        }\n      });\n    };\n\n    this.loadTemperature = () => {\n      if (this.state.temperature.loaded) {\n        return this.state.temperature.value;\n      } else {\n        let apiKey = \"fe5b1ec1d3199b1c1bb7ae3cbda78fc9\";\n        let apiUrl = \"https://api.openweathermap.org/data/2.5/weather?q=\".concat(this.props.name, \"&appid=\").concat(apiKey, \"&units=metric\");\n        axios.get(apiUrl).then(this.showTemperature);\n        return React.createElement(Loader, {\n          type: \"ThreeDots\",\n          color: \"#2d7df6\",\n          height: \"50\",\n          width: \"50\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.convertTemp = () => {\n      alert(\"Feature is coming soon\");\n    };\n\n    this.units = () => {\n      if (this.state.temperature.metr) return React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"\\xB0C |\", React.createElement(\"span\", {\n        className: \"fahrenheit\",\n        onClick: this.convertTemp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"\\xB0F\"));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body bg-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.label(), React.createElement(\"h5\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \" \", this.props.name, \" \")), React.createElement(\"p\", {\n      className: \"card-text city-temperature\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.loadTemperature(), this.units()), React.createElement(\"a\", {\n      href: \"https://www.google.com/search?q=weather+\".concat(this.props.name),\n      target: \"_blank\",\n      className: \"btn btn-primary btn-sm shadow-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"View forecast\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/matt/Dropbox/Sites/plus/4/week-6/start/src/CityWeather.js"],"names":["React","Component","axios","Loader","CityWeather","state","temperature","loaded","label","value","showTemperature","response","setState","Math","round","data","main","temp","unit","loadTemperature","apiKey","apiUrl","props","name","get","then","convertTemp","alert","units","metr","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Loader from \"react-loader-spinner\";\nimport \"./CityWeather.css\";\n\nexport default class CityWeather extends Component {\n  state = {\n    temperature: {\n      loaded: false\n    }\n  };\n\n  label = () => {\n    if (this.state.temperature.value < 0)\n      return <div className=\"badge badge-primary\"> FREEZING </div>;\n    if (this.state.temperature.value > 25)\n      return <div className=\"badge badge-danger\"> HOT </div>;\n    if (this.state.temperature.value < 10)\n      return <div className=\"badge badge-info\"> COLD </div>;\n    return <div className=\"badge badge-warning\"> WARM </div>;\n  };\n\n  showTemperature = response => {\n    this.setState({\n      temperature: {\n        value: Math.round(response.data.main.temp),\n        unit: \"metrics\",\n        loaded: true\n      }\n    });\n  };\n\n  loadTemperature = () => {\n    if (this.state.temperature.loaded) {\n      return this.state.temperature.value;\n    } else {\n      let apiKey = \"fe5b1ec1d3199b1c1bb7ae3cbda78fc9\";\n      let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${\n        this.props.name\n      }&appid=${apiKey}&units=metric`;\n      axios.get(apiUrl).then(this.showTemperature);\n\n      return <Loader type=\"ThreeDots\" color=\"#2d7df6\" height=\"50\" width=\"50\" />;\n    }\n  };\n\n  convertTemp = () => {\n    alert(\"Feature is coming soon\");\n  };\n\n  units = () => {\n    if (this.state.temperature.metr)\n    return (\n      <small>\n        °C |\n        <span className=\"fahrenheit\" onClick={this.convertTemp}>\n          °F\n        </span>\n      </small>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"card\">\n        <div className=\"card-body bg-light\">\n          {this.label()}\n          <h5 className=\"card-title\">\n            <strong> {this.props.name} </strong>\n          </h5>\n          <p className=\"card-text city-temperature\">\n            {this.loadTemperature()}\n            {this.units()}\n          </p>\n          <a\n            href={`https://www.google.com/search?q=weather+${this.props.name}`}\n            target=\"_blank\"\n            className=\"btn btn-primary btn-sm shadow-sm\"\n          >\n            View forecast\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}